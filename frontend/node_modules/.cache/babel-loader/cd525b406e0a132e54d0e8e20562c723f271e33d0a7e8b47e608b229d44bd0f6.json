{"ast":null,"code":"var _jsxFileName = \"/home/ike/PROJECTS/pdf-rag-query/frontend/src/components/RAGApplication.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './RAGApplication.css';\n\n// Declare Three.js as a global variable since we're loading it from a CDN\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar AppState = /*#__PURE__*/function (AppState) {\n  AppState[AppState[\"Upload\"] = 0] = \"Upload\";\n  AppState[AppState[\"Embedding\"] = 1] = \"Embedding\";\n  AppState[AppState[\"Chat\"] = 2] = \"Chat\";\n  return AppState;\n}(AppState || {});\nconst RAGApplication = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [files, setFiles] = useState([]);\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [appState, setAppState] = useState(AppState.Upload);\n  const animationRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (appState === AppState.Embedding && animationRef.current) {\n      Loader();\n    }\n    const scene = new window.THREE.Scene();\n    const camera = new window.THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new window.THREE.WebGLRenderer({\n      canvas: canvasRef.current,\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    const geometry = new window.THREE.SphereGeometry(1, 32, 32);\n    const material = new window.THREE.MeshBasicMaterial({\n      color: 0xDCDCDC,\n      wireframe: true\n    });\n    const sphere = new window.THREE.Mesh(geometry, material);\n    scene.add(sphere);\n    camera.position.z = 5;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      sphere.rotation.x += 0.002;\n      sphere.rotation.y -= 0.002;\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [appState]);\n  const Loader = () => {\n    _s();\n    const [percentage, setPercentage] = useState(0);\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setPercentage(prevPercentage => (prevPercentage + 1) % 101);\n      }, 50);\n      return () => clearInterval(interval);\n    }, []);\n    const radius = 50;\n    const strokeWidth = 10;\n    const normalizedRadius = radius - strokeWidth * 2;\n    const circumference = normalizedRadius * 2 * Math.PI;\n    const strokeDashoffset = circumference - percentage / 100 * circumference;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '120px',\n        height: '120px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        height: radius * 2,\n        width: radius * 2,\n        viewBox: `0 0 ${radius * 2} ${radius * 2}`,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          stroke: \"#e6e6e6\",\n          fill: \"transparent\",\n          strokeWidth: strokeWidth,\n          r: normalizedRadius,\n          cx: radius,\n          cy: radius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          stroke: \"#4a90e2\",\n          fill: \"transparent\",\n          strokeWidth: strokeWidth,\n          strokeDasharray: circumference + ' ' + circumference,\n          style: {\n            strokeDashoffset,\n            transition: 'stroke-dashoffset 0.35s'\n          },\n          r: normalizedRadius,\n          cx: radius,\n          cy: radius,\n          transform: `rotate(-90 ${radius} ${radius})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          fontSize: '20px',\n          fontWeight: 'bold'\n        },\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Loader, \"cpQp2rHDduFVXlGabXg1MafQewg=\");\n  const handleFileUpload = event => {\n    const uploadedFiles = event.target.files;\n    if (uploadedFiles) {\n      const newFiles = Array.from(uploadedFiles).map(file => ({\n        name: file.name\n      }));\n      setFiles(prevFiles => [...prevFiles, ...newFiles]);\n    }\n  };\n  const handleEmbed = () => {\n    setAppState(AppState.Embedding);\n    // Simulate embedding process\n    setTimeout(() => {\n      setAppState(AppState.Chat);\n    }, 5000); // 5 seconds for demonstration\n  };\n  const handleQuestionSubmit = event => {\n    event.preventDefault();\n    // Here you would typically send the question to your backend\n    setAnswer(`Here's the answer to your question: \"${question}\"`);\n    setQuestion('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rag-application\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"background-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"RAG Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), appState === AppState.Upload && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Upload PDFs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Drop files to upload, or click to browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileUpload,\n            multiple: true,\n            accept: \".pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"file-list-title\",\n            children: \"Uploaded Files:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"file-item\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"embed-button\",\n            onClick: handleEmbed,\n            children: \"Embed PDFs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), appState === AppState.Embedding && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-animation\",\n        ref: animationRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), appState === AppState.Chat && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Ask a Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleQuestionSubmit,\n            className: \"question-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: question,\n              onChange: e => setQuestion(e.target.value),\n              placeholder: \"Enter your question here\",\n              className: \"question-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s2(RAGApplication, \"OF5E8QlA+roL2FCzU38v1ojW0Ec=\");\n_c = RAGApplication;\nexport default RAGApplication;\nvar _c;\n$RefreshReg$(_c, \"RAGApplication\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","AppState","RAGApplication","_s2","_s","$RefreshSig$","files","setFiles","question","setQuestion","answer","setAnswer","appState","setAppState","Upload","animationRef","canvasRef","Embedding","current","Loader","scene","window","THREE","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","alpha","setSize","geometry","SphereGeometry","material","MeshBasicMaterial","color","wireframe","sphere","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","handleResize","width","height","aspect","updateProjectionMatrix","addEventListener","removeEventListener","percentage","setPercentage","interval","setInterval","prevPercentage","clearInterval","radius","strokeWidth","normalizedRadius","circumference","Math","PI","strokeDashoffset","style","children","viewBox","stroke","fill","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","transition","transform","top","left","fontSize","fontWeight","handleFileUpload","event","uploadedFiles","target","newFiles","Array","from","map","file","name","prevFiles","handleEmbed","setTimeout","Chat","handleQuestionSubmit","preventDefault","className","ref","type","onChange","multiple","accept","length","index","onClick","onSubmit","value","e","placeholder","_c","$RefreshReg$"],"sources":["/home/ike/PROJECTS/pdf-rag-query/frontend/src/components/RAGApplication.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, ChangeEvent, FormEvent } from 'react';\nimport './RAGApplication.css';\n\n// Declare Three.js as a global variable since we're loading it from a CDN\ndeclare global {\n  interface Window { THREE: any; }\n}\n\ninterface FileInfo {\n  name: string;\n}\n\nenum AppState {\n  Upload,\n  Embedding,\n  Chat\n}\n\nconst RAGApplication: React.FC = () => {\n  const [files, setFiles] = useState<FileInfo[]>([]);\n  const [question, setQuestion] = useState<string>('');\n  const [answer, setAnswer] = useState<string>('');\n  const [appState, setAppState] = useState<AppState>(AppState.Upload);\n  const animationRef = useRef<HTMLDivElement>(null);\n\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (appState === AppState.Embedding && animationRef.current) {\n      Loader();\n    }\n    const scene = new window.THREE.Scene();\n    const camera = new window.THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new window.THREE.WebGLRenderer({ canvas: canvasRef.current, alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    const geometry = new window.THREE.SphereGeometry(1, 32, 32);\n    const material = new window.THREE.MeshBasicMaterial({ color: 0xDCDCDC, wireframe: true });\n    const sphere = new window.THREE.Mesh(geometry, material);\n    scene.add(sphere);\n    camera.position.z = 5;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      sphere.rotation.x += 0.002;\n      sphere.rotation.y -= 0.002;\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [appState]);\n\n  const Loader = () => {\n    const [percentage, setPercentage] = useState(0);\n  \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setPercentage((prevPercentage) => (prevPercentage + 1) % 101);\n      }, 50);\n  \n      return () => clearInterval(interval);\n    }, []);\n  \n    const radius = 50;\n    const strokeWidth = 10;\n    const normalizedRadius = radius - strokeWidth * 2;\n    const circumference = normalizedRadius * 2 * Math.PI;\n    const strokeDashoffset = circumference - (percentage / 100) * circumference;\n  \n    return (\n      <div style={{ position: 'relative', width: '120px', height: '120px' }}>\n        <svg\n          height={radius * 2}\n          width={radius * 2}\n          viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n        >\n          <circle\n            stroke=\"#e6e6e6\"\n            fill=\"transparent\"\n            strokeWidth={strokeWidth}\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n          />\n          <circle\n            stroke=\"#4a90e2\"\n            fill=\"transparent\"\n            strokeWidth={strokeWidth}\n            strokeDasharray={circumference + ' ' + circumference}\n            style={{ strokeDashoffset, transition: 'stroke-dashoffset 0.35s' }}\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n            transform={`rotate(-90 ${radius} ${radius})`}\n          />\n        </svg>\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            fontSize: '20px',\n            fontWeight: 'bold',\n          }}\n        >\n          {percentage}%\n        </div>\n      </div>\n    );\n  };\n\n\n  const handleFileUpload = (event: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = event.target.files;\n    if (uploadedFiles) {\n      const newFiles = Array.from(uploadedFiles).map(file => ({ name: file.name }));\n      setFiles(prevFiles => [...prevFiles, ...newFiles]);\n    }\n  };\n\n  const handleEmbed = () => {\n    setAppState(AppState.Embedding);\n    // Simulate embedding process\n    setTimeout(() => {\n      setAppState(AppState.Chat);\n    }, 5000); // 5 seconds for demonstration\n  };\n\n  const handleQuestionSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // Here you would typically send the question to your backend\n    setAnswer(`Here's the answer to your question: \"${question}\"`);\n    setQuestion('');\n  };\n\n  return (\n    <div className=\"rag-application\">\n        <canvas ref={canvasRef} className=\"background-canvas\" />\n      <div className=\"container\">\n        <h1 className=\"title\">RAG Application</h1>\n        \n        {appState === AppState.Upload && (\n          <div className=\"section\">\n            <h2 className=\"section-title\">Upload PDFs</h2>\n            <label className=\"file-upload\">\n              <span>Drop files to upload, or click to browse</span>\n              <input type=\"file\" onChange={handleFileUpload} multiple accept=\".pdf\" />\n            </label>\n            {files.length > 0 && (\n              <div className=\"file-list\">\n                <h3 className=\"file-list-title\">Uploaded Files:</h3>\n                <ul>\n                  {files.map((file, index) => (\n                    <li key={index} className=\"file-item\">\n                      <span>{file.name}</span>\n                    </li>\n                  ))}\n                </ul>\n                <button className=\"embed-button\" onClick={handleEmbed}>Embed PDFs</button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {appState === AppState.Embedding && (\n          <div className=\"loading-animation\" ref={animationRef}></div>\n        )}\n        \n        {appState === AppState.Chat && (\n          <>\n            <div className=\"section\">\n              <h2 className=\"section-title\">Ask a Question</h2>\n              <form onSubmit={handleQuestionSubmit} className=\"question-form\">\n                <input\n                  type=\"text\"\n                  value={question}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => setQuestion(e.target.value)}\n                  placeholder=\"Enter your question here\"\n                  className=\"question-input\"\n                />\n                <button type=\"submit\" className=\"submit-button\">\n                  Submit Question\n                </button>\n              </form>\n            </div>\n            \n            {answer && (\n              <div className=\"section\">\n                <h2 className=\"section-title\">Answer</h2>\n                <div className=\"answer-box\">\n                  <p>{answer}</p>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RAGApplication;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}