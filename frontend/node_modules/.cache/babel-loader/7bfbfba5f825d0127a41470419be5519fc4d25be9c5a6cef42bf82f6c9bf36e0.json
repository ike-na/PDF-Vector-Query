{"ast":null,"code":"var _jsxFileName = \"/home/ike/PROJECTS/pdf-rag-query/frontend/src/components/QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './QuestionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = ({\n  onClose\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [error, setError] = useState('');\n  const handleQuestionSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error asking question');\n      }\n      const data = await response.json();\n      setAnswer(data.answer);\n      setError('');\n    } catch (err) {\n      setError(`Failed to get an answer: ${err}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: '> ASK YOUR QUESTION.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"What do you want to know?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuestionSubmit,\n        children: 'Submit Question'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"answer\",\n        children: `Answer: ${answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"QI1KQRwycI1PoMcmbK3mxHnU0xc=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionForm","onClose","_s","question","setQuestion","answer","setAnswer","error","setError","handleQuestionSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/ike/PROJECTS/pdf-rag-query/frontend/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './QuestionForm.css';\nimport Ball from './Ball';\n\ninterface QuestionFormProps {\n  onClose: () => void;\n}\n\nconst QuestionForm: React.FC<QuestionFormProps> = ({ onClose }) => {\n  const [question, setQuestion] = useState<string>('');\n  const [answer, setAnswer] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleQuestionSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question }),\n      });\n      if (!response.ok) {\n        throw new Error('Error asking question');\n      }\n      const data = await response.json();\n      setAnswer(data.answer);\n      setError('');\n    } catch (err) {\n      setError(`Failed to get an answer: ${err}`);\n    }\n  };\n\n  return (\n    <div className='big-container'>\n      {/* <Ball /> */}\n      <div className=\"question-form\">\n        <h3>{'> ASK YOUR QUESTION.'}</h3>\n        <input\n          type=\"text\"\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          placeholder=\"What do you want to know?\"\n        />\n        <button onClick={handleQuestionSubmit}>\n          {'Submit Question'}\n        </button>\n        {answer && <p className=\"answer\">{`Answer: ${answer}`}</p>}\n        {error && <p className=\"error\">{error}</p>}\n        <button onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}