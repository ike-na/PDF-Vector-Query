{"ast":null,"code":"var _jsxFileName = \"/home/ike/PROJECTS/pdf-rag-query/frontend/src/components/QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = ({\n  onClose\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleAskQuestion = async () => {\n    const response = await fetch('http://localhost:5000/ask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setAnswer(data.answer);\n    } else {\n      setAnswer('Error getting answer.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"completion-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ask a Question About the PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      placeholder: \"Type your question here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAskQuestion,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Answer: \", answer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionForm","onClose","_s","question","setQuestion","answer","setAnswer","handleAskQuestion","response","fetch","method","headers","body","JSON","stringify","ok","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/ike/PROJECTS/pdf-rag-query/frontend/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst QuestionForm: React.FC<{ onClose: () => void }> = ({ onClose }) => {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const handleAskQuestion = async () => {\n    const response = await fetch('http://localhost:5000/ask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ question }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      setAnswer(data.answer);\n    } else {\n      setAnswer('Error getting answer.');\n    }\n  };\n\n  return (\n    <div className=\"completion-message\">\n      <h2>Ask a Question About the PDF</h2>\n      <textarea \n        value={question} \n        onChange={(e) => setQuestion(e.target.value)} \n        placeholder=\"Type your question here...\" \n      />\n      <button onClick={handleAskQuestion}>Submit</button>\n      <button onClick={onClose}>Close</button>\n      {answer && <p>Answer: {answer}</p>}\n    </div>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX;MAAS,CAAC;IACnC,CAAC,CAAC;IAEF,IAAIK,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,SAAS,CAACU,IAAI,CAACX,MAAM,CAAC;IACxB,CAAC,MAAM;MACLC,SAAS,CAAC,uBAAuB,CAAC;IACpC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKmB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpB,OAAA;MAAAoB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCxB,OAAA;MACEyB,KAAK,EAAErB,QAAS;MAChBsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAA4B;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFxB,OAAA;MAAQ8B,OAAO,EAAEtB,iBAAkB;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDxB,OAAA;MAAQ8B,OAAO,EAAE5B,OAAQ;MAAAkB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvClB,MAAM,iBAAIN,OAAA;MAAAoB,QAAA,GAAG,UAAQ,EAACd,MAAM;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCIF,YAA+C;AAAA8B,EAAA,GAA/C9B,YAA+C;AAoCrD,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}